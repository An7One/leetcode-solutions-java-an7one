### Array
# Prefix Sum
3   0325    https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/
3   0525    https://leetcode.com/problems/contiguous-array/
3   0560    https://leetcode.com/problems/subarray-sum-equals-k/
3   0974    https://leetcode.com/problems/subarray-sums-divisible-by-k/




Resource:
store previous sum and the times of this sum, because sum[i, j] = sum[0, j] - sum[0, i - 1], this is a very very important idea
https://leetcode.com/problems/binary-subarrays-with-sum/discuss/187005/3-ways-to-solve-this-kind-of-problem.

about preSum.put(0, 1);
https://leetcode.com/problems/subarray-sum-equals-k/discuss/102106/Java-Solution-PreSum-+-HashMap/416171
https://leetcode.com/problems/subarray-sum-equals-k/discuss/102106/Java-Solution-PreSum-+-HashMap/238328